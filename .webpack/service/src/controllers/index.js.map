{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@cloudcar-app/aws-tools-lib\"","webpack:///./src/controllers/index.ts","webpack:///./src/actions/decisionTaker.ts","webpack:///./src/actions/calculateRecipe.ts","webpack:///./src/actions/sendMessage.action.ts","webpack:///external \"aws-sdk\"","webpack:///./src/messages.ts","webpack:///./src/actions/setReminder.ts","webpack:///./src/actions/setSourDoughStep.ts","webpack:///./src/actions/setFoldStep.ts","webpack:///./src/actions/setSaltStep.ts"],"names":[],"mappings":"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","file":"src/controllers/index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = require(\"@cloudcar-app/aws-tools-lib\");","import { APIGatewayEvent } from 'aws-lambda';\nimport { TelegramMessage } from '../types/types';\nimport { decisionTaker } from '../actions/decisionTaker';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const focacciaBot = async (event: APIGatewayEvent) => {\n  const body = JSON.parse(event.body || '');\n  console.log(body);\n  try {\n    if (body.message !== undefined && body.edited_message === undefined) {\n      const telegramMessage = body.message as TelegramMessage;\n      await decisionTaker(telegramMessage);\n    } else if (body.edited_message !== undefined) {\n      const telegramMessage = body.edited_message as TelegramMessage;\n      await decisionTaker(telegramMessage);\n    }\n    return { statusCode: 200 };\n  } catch (error) {\n    console.log(error);\n    return { statusCode: 500 };\n  }\n};\n","/* eslint-disable no-restricted-globals */\n/* eslint-disable max-len */\n/* eslint-disable default-case */\n/* eslint-disable import/prefer-default-export */\nimport { Recipe, TelegramMessage } from '../types/types';\nimport {\n  calculateRecipeWithFlour,\n  calculateRecipeWithSalt,\n  calculateRecipeWithSourDough,\n  calculateRecipeWithWater,\n} from './calculateRecipe';\nimport { sendToUser } from './sendMessage.action';\nimport { responseMessage } from '../messages';\nimport { setReminder } from './setReminder';\n\nconst findTerm = (message: string, term: string): boolean => {\n  if (message.toLowerCase().includes(term)) {\n    return true;\n  }\n  return false;\n};\n\nconst justNumbers = (text: string) => {\n  const numberString = text.replace(/[^0-9.+]/g, '');\n  return parseFloat(numberString);\n};\n\nconst recipeMessage = (recipe: Recipe) => {\n  return [\n    `Flour: ${recipe.flour} grs\\n`,\n    `Initial Water: ${recipe.initialWater} grs \\n`,\n    `Final Water: ${recipe.finalWater} grs \\n`,\n    `Sour Dough: ${recipe.sourDough} grs\\n`,\n    `Salt: ${recipe.salt} grs \\n`,\n    'Best of luck with your focaccia!!!',\n  ];\n};\n\nexport const decisionTaker = async (telegramMessage: TelegramMessage) => {\n  if (telegramMessage.text) {\n    let message = responseMessage.start.messages.en;\n    switch (true) {\n      case findTerm(telegramMessage.text, 'flour'): {\n        message = [\n          'Please enter how much flour you have in grams measure in this format \"flour: 420',\n        ];\n        if (!isNaN(Number(justNumbers(telegramMessage.text)))) {\n          const recipe = await calculateRecipeWithFlour(\n            Number(justNumbers(telegramMessage.text)),\n          );\n          message = recipeMessage(recipe);\n        }\n        break;\n      }\n      case findTerm(telegramMessage.text, 'salt'): {\n        message = [\n          'Please enter how much salt you have in grams measure in this format \"salt: 320\"',\n        ];\n        if (!isNaN(Number(justNumbers(telegramMessage.text)))) {\n          const recipe = await calculateRecipeWithSalt(\n            Number(justNumbers(telegramMessage.text)),\n          );\n          message = recipeMessage(recipe);\n        }\n        break;\n      }\n      case findTerm(telegramMessage.text, 'water'): {\n        message = [\n          'Please enter how much water you have in grams measure in this format \"water: 1000\"',\n        ];\n        if (!isNaN(Number(justNumbers(telegramMessage.text)))) {\n          const recipe = await calculateRecipeWithWater(\n            Number(justNumbers(telegramMessage.text)),\n          );\n          message = recipeMessage(recipe);\n        }\n        break;\n      }\n      case findTerm(telegramMessage.text, 'sour'): {\n        message = [\n          'Please enter how much sour dough you have in grams measure in this format \"sour dough: 200\"',\n        ];\n        if (!isNaN(Number(justNumbers(telegramMessage.text)))) {\n          const recipe = await calculateRecipeWithSourDough(\n            Number(justNumbers(telegramMessage.text)),\n          );\n          message = recipeMessage(recipe);\n        }\n        break;\n      }\n      case findTerm(telegramMessage.text, 'instruction'): {\n        message = [\n          'Well lets go and cook this delicious focaccia\\n' +\n            '1. Mix well the flour with the initial water and wait 30 minutes. You have to wait autolysis\\n' +\n            '2. Add the sour dough to the mix and wait 30 minutes more\\n' +\n            '3. Mix the final water with the salt and mix well with the dough\\n' +\n            '4. Make a fold and wait from 30 to 60 minutes depending of the room temperature\\n' +\n            '5. Repeat the las step for 3 more times\\n' +\n            '6. Put some oil on a tray and extend the dough on it\\n' +\n            '7. Put the dough on the refrigerator to let it rise. At least 12 hours\\n' +\n            'If you want I can remember you al the steps to cook the best focaccia in that case let know and say \"remember me\"',\n        ];\n        break;\n      }\n      case findTerm(telegramMessage.text, 'remember'): {\n        message = ['I will remember you. Just relax!'];\n        await setReminder(telegramMessage);\n        break;\n      }\n      case findTerm(telegramMessage.text, 'start'): {\n        message = [\n          'Lets cock this delicious focaccia!!!\\n',\n          'Star with the first step \"Mix well the flour with the initial water and wait 30 minutes. You have to wait autolysis\"\\n',\n        ];\n        break;\n      }\n    }\n    try {\n      await sendToUser(telegramMessage.chat.id, message);\n    } catch (error) {\n      console.log(error);\n    }\n  } else {\n    await sendToUser(telegramMessage.chat.id, ['Text message is expected.']);\n  }\n};\n","import { Recipe } from '../types/types';\n\nexport const calculateRecipeWithFlour = async (\n  flourAmount: number,\n): Promise<Recipe> => {\n  const recipe = {\n    flour: flourAmount,\n    initialWater: flourAmount * 0.8 * 0.95,\n    finalWater: flourAmount * 0.8 * 0.05,\n    sourDough: flourAmount * 0.3,\n    salt: flourAmount * 0.025,\n  };\n  return recipe;\n};\n\nexport const calculateRecipeWithSalt = async (\n  salt: number,\n): Promise<Recipe> => {\n  const recipe = {\n    flour: salt / 0.025,\n    initialWater: (salt / 0.025) * 0.8 * 0.95,\n    finalWater: (salt / 0.025) * 0.8 * 0.05,\n    sourDough: (salt / 0.025) * 0.3,\n    salt,\n  };\n  return recipe;\n};\n\nexport const calculateRecipeWithSourDough = async (\n  sourDough: number,\n): Promise<Recipe> => {\n  const recipe = {\n    flour: sourDough / 0.3,\n    initialWater: (sourDough / 0.3) * 0.8 * 0.95,\n    finalWater: (sourDough / 0.3) * 0.8 * 0.05,\n    sourDough,\n    salt: (sourDough / 0.3) * 0.025,\n  };\n  return recipe;\n};\n\nexport const calculateRecipeWithWater = async (\n  water: number,\n): Promise<Recipe> => {\n  const recipe = {\n    flour: water / 0.8,\n    initialWater: water * 0.95,\n    finalWater: water * 0.05,\n    sourDough: (water / 0.8) * 0.3,\n    salt: (water / 0.8) * 0.025,\n  };\n  return recipe;\n};\n","/* eslint-disable import/prefer-default-export */\n// import axios from 'axios';\nimport { Lambda } from 'aws-sdk';\n\n// const telegramApiAxiosInstance = axios.create({\n//   baseURL: `https://api.telegram.org/bot${process.env.TELEGRAM_TOKEN}`,\n//   headers: {\n//     'Content-Type': 'application/json',\n//     'access-control-allow-origin': '*',\n//   },\n// });\n\nexport const sendToUser = async (chat_id: any, text: string[]) => {\n  const lambda = new Lambda();\n\n  const params = {\n    message: text,\n    chatId: chat_id,\n  };\n  const lambdaParams = {\n    InvocationType: 'Event',\n    FunctionName: 'sendFocacciaMessage',\n    Payload: JSON.stringify(params),\n  };\n  await lambda.invoke(lambdaParams).promise();\n  // const response = await telegramApiAxiosInstance({\n  //   url: `/sendMessage?chat_id=${chat_id}&text=${text}`,\n  //   method: 'GET',\n  // }).then((item) => {\n  //   console.log(item);\n  // });\n  // return response;\n};\n","module.exports = require(\"aws-sdk\");","const recipeOptions = [\n  '1. recipe if I have the amount of flour',\n  '2. recipe if I have the amount of sour dough',\n  '3. recipe if I have the amount of salt',\n  '4. recipe if I have the amount of water',\n  '5. Instructions',\n];\n\n// eslint-disable-next-line import/prefer-default-export\nexport const responseMessage = {\n  start: {\n    name: 'This is the welcome message',\n    messages: {\n      en: [\n        'Hello to focaccia Bot please enter one of the options to start cooking',\n        ...recipeOptions,\n      ],\n      // ['Hello to focaccia Bot please enter one of the options to start cooking`,\n      // recipeOptions,],\n      es:\n        'Hola al bot de focaccia, por favor enviame \"Cocinar esta receta\" para empezar',\n    },\n  },\n};\n","import { TelegramMessage } from '../types/types';\nimport { setSourDoughStep } from './setSourDoughStep';\nimport { setFoldStep } from './setFoldStep';\nimport { setSaltStep } from './setSaltStep';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const setReminder = async (telegramMessage: TelegramMessage) => {\n  await setSourDoughStep(telegramMessage);\n  await setSaltStep(telegramMessage);\n  await setFoldStep(telegramMessage);\n};\n","/* eslint-disable import/prefer-default-export */\nimport { dynamo } from '@cloudcar-app/aws-tools-lib';\nimport { TelegramMessage } from '../types/types';\n\nexport const setSourDoughStep = async (telegramMessage: TelegramMessage) => {\n  try {\n    const step = {\n      chatId: telegramMessage.chat.id,\n      step: 'sour-dough',\n      message:\n        'Remember to add the sour dough  and wait for 30 min for the next step',\n      ExpirationDate: Math.floor(Date.now() / 1000) + 60 * 25,\n    };\n    const params = {\n      TableName: process.env.REMEMBER_TABLE,\n      Item: step,\n    };\n\n    const item = await dynamo.createItem(params);\n    return item;\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n    return error;\n  }\n};\n","/* eslint-disable import/prefer-default-export */\nimport { dynamo } from '@cloudcar-app/aws-tools-lib';\nimport { TelegramMessage } from '../types/types';\n\nexport const setFoldStep = async (telegramMessage: TelegramMessage) => {\n  try {\n    const step = {\n      chatId: telegramMessage.chat.id,\n      step: 'fold',\n      message: 'Remember to make 4 folds with a difference of 30 minutes',\n      ExpirationDate: Math.floor(Date.now() / 1000) + 60 * 85,\n    };\n    const params = {\n      TableName: process.env.REMEMBER_TABLE,\n      Item: step,\n    };\n\n    const item = await dynamo.createItem(params);\n    return item;\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n  }\n};\n","/* eslint-disable import/prefer-default-export */\nimport { dynamo } from '@cloudcar-app/aws-tools-lib';\nimport { TelegramMessage } from '../types/types';\n\nexport const setSaltStep = async (telegramMessage: TelegramMessage) => {\n  try {\n    const step = {\n      chatId: telegramMessage.chat.id,\n      step: 'salt',\n      message:\n        'Remember to add the salt and the final water to the dough  and wait for 30-60 min for the next step',\n      ExpirationDate: Math.floor(Date.now() / 1000) + 60 * 55,\n    };\n    const params = {\n      TableName: process.env.REMEMBER_TABLE,\n      Item: step,\n    };\n\n    const item = await dynamo.createItem(params);\n    return item;\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n  }\n};\n"],"sourceRoot":""}